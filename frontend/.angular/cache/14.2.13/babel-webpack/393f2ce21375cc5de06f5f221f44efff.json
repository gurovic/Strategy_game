{"ast":null,"code":"const e10 = Math.sqrt(50),\n      e5 = Math.sqrt(10),\n      e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n        power = Math.floor(Math.log10(step)),\n        error = step / Math.pow(10, power),\n        factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start,\n        [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1,\n        ticks = new Array(n);\n\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start,\n        inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}","map":{"version":3,"names":["e10","Math","sqrt","e5","e2","tickSpec","start","stop","count","step","max","power","floor","log10","error","pow","factor","i1","i2","inc","round","ticks","reverse","n","Array","i","tickIncrement","tickStep"],"sources":["/home/boriskiva/PycharmProjects/Strategy_game/strategy_game/frontend/node_modules/d3-array/src/ticks.js"],"sourcesContent":["const e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nfunction tickSpec(start, stop, count) {\n  const step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log10(step)),\n      error = step / Math.pow(10, power),\n      factor = error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1;\n  let i1, i2, inc;\n  if (power < 0) {\n    inc = Math.pow(10, -power) / factor;\n    i1 = Math.round(start * inc);\n    i2 = Math.round(stop * inc);\n    if (i1 / inc < start) ++i1;\n    if (i2 / inc > stop) --i2;\n    inc = -inc;\n  } else {\n    inc = Math.pow(10, power) * factor;\n    i1 = Math.round(start / inc);\n    i2 = Math.round(stop / inc);\n    if (i1 * inc < start) ++i1;\n    if (i2 * inc > stop) --i2;\n  }\n  if (i2 < i1 && 0.5 <= count && count < 2) return tickSpec(start, stop, count * 2);\n  return [i1, i2, inc];\n}\n\nexport default function ticks(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  if (!(count > 0)) return [];\n  if (start === stop) return [start];\n  const reverse = stop < start, [i1, i2, inc] = reverse ? tickSpec(stop, start, count) : tickSpec(start, stop, count);\n  if (!(i2 >= i1)) return [];\n  const n = i2 - i1 + 1, ticks = new Array(n);\n  if (reverse) {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i2 - i) * inc;\n  } else {\n    if (inc < 0) for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) / -inc;\n    else for (let i = 0; i < n; ++i) ticks[i] = (i1 + i) * inc;\n  }\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  return tickSpec(start, stop, count)[2];\n}\n\nexport function tickStep(start, stop, count) {\n  stop = +stop, start = +start, count = +count;\n  const reverse = stop < start, inc = reverse ? tickIncrement(stop, start, count) : tickIncrement(start, stop, count);\n  return (reverse ? -1 : 1) * (inc < 0 ? 1 / -inc : inc);\n}\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAU,EAAV,CAAZ;AAAA,MACIC,EAAE,GAAGF,IAAI,CAACC,IAAL,CAAU,EAAV,CADT;AAAA,MAEIE,EAAE,GAAGH,IAAI,CAACC,IAAL,CAAU,CAAV,CAFT;;AAIA,SAASG,QAAT,CAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;EACpC,MAAMC,IAAI,GAAG,CAACF,IAAI,GAAGD,KAAR,IAAiBL,IAAI,CAACS,GAAL,CAAS,CAAT,EAAYF,KAAZ,CAA9B;EAAA,MACIG,KAAK,GAAGV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACY,KAAL,CAAWJ,IAAX,CAAX,CADZ;EAAA,MAEIK,KAAK,GAAGL,IAAI,GAAGR,IAAI,CAACc,GAAL,CAAS,EAAT,EAAaJ,KAAb,CAFnB;EAAA,MAGIK,MAAM,GAAGF,KAAK,IAAId,GAAT,GAAe,EAAf,GAAoBc,KAAK,IAAIX,EAAT,GAAc,CAAd,GAAkBW,KAAK,IAAIV,EAAT,GAAc,CAAd,GAAkB,CAHrE;EAIA,IAAIa,EAAJ,EAAQC,EAAR,EAAYC,GAAZ;;EACA,IAAIR,KAAK,GAAG,CAAZ,EAAe;IACbQ,GAAG,GAAGlB,IAAI,CAACc,GAAL,CAAS,EAAT,EAAa,CAACJ,KAAd,IAAuBK,MAA7B;IACAC,EAAE,GAAGhB,IAAI,CAACmB,KAAL,CAAWd,KAAK,GAAGa,GAAnB,CAAL;IACAD,EAAE,GAAGjB,IAAI,CAACmB,KAAL,CAAWb,IAAI,GAAGY,GAAlB,CAAL;IACA,IAAIF,EAAE,GAAGE,GAAL,GAAWb,KAAf,EAAsB,EAAEW,EAAF;IACtB,IAAIC,EAAE,GAAGC,GAAL,GAAWZ,IAAf,EAAqB,EAAEW,EAAF;IACrBC,GAAG,GAAG,CAACA,GAAP;EACD,CAPD,MAOO;IACLA,GAAG,GAAGlB,IAAI,CAACc,GAAL,CAAS,EAAT,EAAaJ,KAAb,IAAsBK,MAA5B;IACAC,EAAE,GAAGhB,IAAI,CAACmB,KAAL,CAAWd,KAAK,GAAGa,GAAnB,CAAL;IACAD,EAAE,GAAGjB,IAAI,CAACmB,KAAL,CAAWb,IAAI,GAAGY,GAAlB,CAAL;IACA,IAAIF,EAAE,GAAGE,GAAL,GAAWb,KAAf,EAAsB,EAAEW,EAAF;IACtB,IAAIC,EAAE,GAAGC,GAAL,GAAWZ,IAAf,EAAqB,EAAEW,EAAF;EACtB;;EACD,IAAIA,EAAE,GAAGD,EAAL,IAAW,OAAOT,KAAlB,IAA2BA,KAAK,GAAG,CAAvC,EAA0C,OAAOH,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAK,GAAG,CAAtB,CAAf;EAC1C,OAAO,CAACS,EAAD,EAAKC,EAAL,EAASC,GAAT,CAAP;AACD;;AAED,eAAe,SAASE,KAAT,CAAef,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;EAChDD,IAAI,GAAG,CAACA,IAAR,EAAcD,KAAK,GAAG,CAACA,KAAvB,EAA8BE,KAAK,GAAG,CAACA,KAAvC;EACA,IAAI,EAAEA,KAAK,GAAG,CAAV,CAAJ,EAAkB,OAAO,EAAP;EAClB,IAAIF,KAAK,KAAKC,IAAd,EAAoB,OAAO,CAACD,KAAD,CAAP;EACpB,MAAMgB,OAAO,GAAGf,IAAI,GAAGD,KAAvB;EAAA,MAA8B,CAACW,EAAD,EAAKC,EAAL,EAASC,GAAT,IAAgBG,OAAO,GAAGjB,QAAQ,CAACE,IAAD,EAAOD,KAAP,EAAcE,KAAd,CAAX,GAAkCH,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAA/F;EACA,IAAI,EAAEU,EAAE,IAAID,EAAR,CAAJ,EAAiB,OAAO,EAAP;EACjB,MAAMM,CAAC,GAAGL,EAAE,GAAGD,EAAL,GAAU,CAApB;EAAA,MAAuBI,KAAK,GAAG,IAAIG,KAAJ,CAAUD,CAAV,CAA/B;;EACA,IAAID,OAAJ,EAAa;IACX,IAAIH,GAAG,GAAG,CAAV,EAAa,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuB,EAAEE,CAAzB,EAA4BJ,KAAK,CAACI,CAAD,CAAL,GAAW,CAACP,EAAE,GAAGO,CAAN,IAAW,CAACN,GAAvB,CAAzC,KACK,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuB,EAAEE,CAAzB,EAA4BJ,KAAK,CAACI,CAAD,CAAL,GAAW,CAACP,EAAE,GAAGO,CAAN,IAAWN,GAAtB;EAClC,CAHD,MAGO;IACL,IAAIA,GAAG,GAAG,CAAV,EAAa,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuB,EAAEE,CAAzB,EAA4BJ,KAAK,CAACI,CAAD,CAAL,GAAW,CAACR,EAAE,GAAGQ,CAAN,IAAW,CAACN,GAAvB,CAAzC,KACK,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAApB,EAAuB,EAAEE,CAAzB,EAA4BJ,KAAK,CAACI,CAAD,CAAL,GAAW,CAACR,EAAE,GAAGQ,CAAN,IAAWN,GAAtB;EAClC;;EACD,OAAOE,KAAP;AACD;AAED,OAAO,SAASK,aAAT,CAAuBpB,KAAvB,EAA8BC,IAA9B,EAAoCC,KAApC,EAA2C;EAChDD,IAAI,GAAG,CAACA,IAAR,EAAcD,KAAK,GAAG,CAACA,KAAvB,EAA8BE,KAAK,GAAG,CAACA,KAAvC;EACA,OAAOH,QAAQ,CAACC,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAAR,CAA6B,CAA7B,CAAP;AACD;AAED,OAAO,SAASmB,QAAT,CAAkBrB,KAAlB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsC;EAC3CD,IAAI,GAAG,CAACA,IAAR,EAAcD,KAAK,GAAG,CAACA,KAAvB,EAA8BE,KAAK,GAAG,CAACA,KAAvC;EACA,MAAMc,OAAO,GAAGf,IAAI,GAAGD,KAAvB;EAAA,MAA8Ba,GAAG,GAAGG,OAAO,GAAGI,aAAa,CAACnB,IAAD,EAAOD,KAAP,EAAcE,KAAd,CAAhB,GAAuCkB,aAAa,CAACpB,KAAD,EAAQC,IAAR,EAAcC,KAAd,CAA/F;EACA,OAAO,CAACc,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAAhB,KAAsBH,GAAG,GAAG,CAAN,GAAU,IAAI,CAACA,GAAf,GAAqBA,GAA3C,CAAP;AACD"},"metadata":{},"sourceType":"module"}