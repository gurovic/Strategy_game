{"ast":null,"code":"const t0 = new Date(),\n      t1 = new Date();\nexport function timeInterval(floori, offseti, count, field) {\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date() : new Date(+date)), date;\n  }\n\n  interval.floor = date => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = date => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = date => {\n    const d0 = interval(date),\n          d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n\n    let previous;\n\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start); while (previous < start && start < stop);\n\n    return range;\n  };\n\n  interval.filter = test => {\n    return timeInterval(date => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = step => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? d => field(d) % step === 0 : d => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}","map":{"version":3,"names":["t0","Date","t1","timeInterval","floori","offseti","count","field","interval","date","arguments","length","floor","ceil","round","d0","d1","offset","step","Math","range","start","stop","previous","push","filter","test","setTime","end","every","isFinite","d"],"sources":["/home/boriskiva/PycharmProjects/Strategy_game/strategy_game/frontend/node_modules/d3-time/src/interval.js"],"sourcesContent":["const t0 = new Date, t1 = new Date;\n\nexport function timeInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = arguments.length === 0 ? new Date : new Date(+date)), date;\n  }\n\n  interval.floor = (date) => {\n    return floori(date = new Date(+date)), date;\n  };\n\n  interval.ceil = (date) => {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = (date) => {\n    const d0 = interval(date), d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = (date, step) => {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = (start, stop, step) => {\n    const range = [];\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    let previous;\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = (test) => {\n    return timeInterval((date) => {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, (date, step) => {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = (start, end) => {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = (step) => {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? (d) => field(d) % step === 0\n              : (d) => interval.count(0, d) % step === 0);\n    };\n  }\n\n  return interval;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}