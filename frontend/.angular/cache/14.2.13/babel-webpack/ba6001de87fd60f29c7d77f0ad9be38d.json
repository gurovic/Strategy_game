{"ast":null,"code":"import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n\n    this._init();\n  }\n\n  update() {\n    this.delaunay.update();\n\n    this._init();\n\n    return this;\n  }\n\n  _init() {\n    const {\n      delaunay: {\n        points,\n        hull,\n        triangles\n      },\n      vectors\n    } = this;\n    let bx, by; // lazily computed barycenter of the hull\n    // Compute circumcenters.\n\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n\n          bx /= hull.length, by /= hull.length;\n        }\n\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    } // Compute exterior cell rays.\n\n\n    let h = hull[hull.length - 1];\n    let p0,\n        p1 = h * 4;\n    let x0,\n        x1 = points[2 * h];\n    let y0,\n        y1 = points[2 * h + 1];\n    vectors.fill(0);\n\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n\n  render(context) {\n    const buffer = context == null ? context = new Path() : undefined;\n    const {\n      delaunay: {\n        halfedges,\n        inedges,\n        hull\n      },\n      circumcenters,\n      vectors\n    } = this;\n    if (hull.length <= 1) return null;\n\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n\n    let h0,\n        h1 = hull[hull.length - 1];\n\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n\n    return buffer && buffer.value();\n  }\n\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path() : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path() : undefined;\n\n    const points = this._clip(i);\n\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n\n    while (points[0] === points[n - 2] && points[1] === points[n - 1] && n > 1) n -= 2;\n\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i - 2] || points[i + 1] !== points[i - 1]) context.lineTo(points[i], points[i + 1]);\n    }\n\n    context.closePath();\n    return buffer && buffer.value();\n  }\n\n  *cellPolygons() {\n    const {\n      delaunay: {\n        points\n      }\n    } = this;\n\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n\n  cellPolygon(i) {\n    const polygon = new Polygon();\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n\n    const c0 = this._regioncode(x0, y0);\n\n    const c1 = this._regioncode(x1, y1);\n\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n\n  *neighbors(i) {\n    const ci = this._clip(i);\n\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j); // find the common edge\n\n\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj] && ci[ai + 1] === cj[aj + 1] && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj] && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n\n  _cell(i) {\n    const {\n      circumcenters,\n      delaunay: {\n        inedges,\n        halfedges,\n        triangles\n      }\n    } = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n\n    const points = [];\n    let e = e0;\n\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n\n    return points;\n  }\n\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n\n    const points = this._cell(i);\n\n    if (points === null) return null;\n    const {\n      vectors: V\n    } = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1] ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3]) : this._clipFinite(i, points));\n  }\n\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0,\n        y0,\n        x1 = points[n - 2],\n        y1 = points[n - 1];\n\n    let c0,\n        c1 = this._regioncode(x1, y1);\n\n    let e0,\n        e1 = 0;\n\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);else P = [sx0, sy0];\n        }\n\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);else P = [sx1, sy1];\n      }\n    }\n\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n\n    return P;\n  }\n\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x,\n          y,\n          c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points),\n        p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n\n    return P;\n  }\n\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n\n      switch (e0) {\n        case 0b0101:\n          e0 = 0b0100;\n          continue;\n        // top-left\n\n        case 0b0100:\n          e0 = 0b0110, x = this.xmax, y = this.ymin;\n          break;\n        // top\n\n        case 0b0110:\n          e0 = 0b0010;\n          continue;\n        // top-right\n\n        case 0b0010:\n          e0 = 0b1010, x = this.xmax, y = this.ymax;\n          break;\n        // right\n\n        case 0b1010:\n          e0 = 0b1000;\n          continue;\n        // bottom-right\n\n        case 0b1000:\n          e0 = 0b1001, x = this.xmin, y = this.ymax;\n          break;\n        // bottom\n\n        case 0b1001:\n          e0 = 0b0001;\n          continue;\n        // bottom-left\n\n        case 0b0001:\n          e0 = 0b0101, x = this.xmin, y = this.ymin;\n          break;\n        // left\n      } // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n\n\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n\n    return j;\n  }\n\n  _project(x0, y0, vx, vy) {\n    let t = Infinity,\n        c,\n        x,\n        y;\n\n    if (vy < 0) {\n      // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) {\n      // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n\n    if (vx > 0) {\n      // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) {\n      // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n\n    return [x, y];\n  }\n\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001 : x === this.xmax ? 0b0010 : 0b0000) | (y === this.ymin ? 0b0100 : y === this.ymax ? 0b1000 : 0b0000);\n  }\n\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001 : x > this.xmax ? 0b0010 : 0b0000) | (y < this.ymin ? 0b0100 : y > this.ymax ? 0b1000 : 0b0000);\n  }\n\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i += 2) {\n        const j = (i + 2) % P.length,\n              k = (i + 4) % P.length;\n\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n\n      if (!P.length) P = null;\n    }\n\n    return P;\n  }\n\n}","map":{"version":3,"names":["Path","Polygon","Voronoi","constructor","delaunay","xmin","ymin","xmax","ymax","Error","_circumcenters","Float64Array","points","length","vectors","_init","update","hull","triangles","bx","by","circumcenters","subarray","i","j","n","x","y","t1","t2","t3","x1","y1","x2","y2","x3","y3","dx","dy","ex","ey","ab","Math","abs","undefined","a","sign","d","bl","cl","h","p0","p1","x0","y0","fill","render","context","buffer","halfedges","inedges","ti","floor","tj","xi","yi","xj","yj","_renderSegment","h0","h1","t","v","p","_project","value","renderBounds","rect","renderCell","_clip","moveTo","lineTo","closePath","cellPolygons","cell","cellPolygon","index","polygon","S","c0","_regioncode","c1","_clipSegment","contains","_step","neighbors","ci","cj","loop","ai","li","aj","lj","_cell","e0","e","push","V","_simplify","_clipInfinite","_clipFinite","P","e1","sx0","sy0","sx1","sy1","_edgecode","_edge","flip","c","vx0","vy0","vxn","vyn","Array","from","unshift","splice","vx","vy","Infinity","k"],"sources":["/home/boriskiva/PycharmProjects/Strategy_game/strategy_game/frontend/node_modules/d3-delaunay/src/voronoi.js"],"sourcesContent":["import Path from \"./path.js\";\nimport Polygon from \"./polygon.js\";\n\nexport default class Voronoi {\n  constructor(delaunay, [xmin, ymin, xmax, ymax] = [0, 0, 960, 500]) {\n    if (!((xmax = +xmax) >= (xmin = +xmin)) || !((ymax = +ymax) >= (ymin = +ymin))) throw new Error(\"invalid bounds\");\n    this.delaunay = delaunay;\n    this._circumcenters = new Float64Array(delaunay.points.length * 2);\n    this.vectors = new Float64Array(delaunay.points.length * 2);\n    this.xmax = xmax, this.xmin = xmin;\n    this.ymax = ymax, this.ymin = ymin;\n    this._init();\n  }\n  update() {\n    this.delaunay.update();\n    this._init();\n    return this;\n  }\n  _init() {\n    const {delaunay: {points, hull, triangles}, vectors} = this;\n    let bx, by; // lazily computed barycenter of the hull\n\n    // Compute circumcenters.\n    const circumcenters = this.circumcenters = this._circumcenters.subarray(0, triangles.length / 3 * 2);\n    for (let i = 0, j = 0, n = triangles.length, x, y; i < n; i += 3, j += 2) {\n      const t1 = triangles[i] * 2;\n      const t2 = triangles[i + 1] * 2;\n      const t3 = triangles[i + 2] * 2;\n      const x1 = points[t1];\n      const y1 = points[t1 + 1];\n      const x2 = points[t2];\n      const y2 = points[t2 + 1];\n      const x3 = points[t3];\n      const y3 = points[t3 + 1];\n\n      const dx = x2 - x1;\n      const dy = y2 - y1;\n      const ex = x3 - x1;\n      const ey = y3 - y1;\n      const ab = (dx * ey - dy * ex) * 2;\n\n      if (Math.abs(ab) < 1e-9) {\n        // For a degenerate triangle, the circumcenter is at the infinity, in a\n        // direction orthogonal to the halfedge and away from the “center” of\n        // the diagram <bx, by>, defined as the hull’s barycenter.\n        if (bx === undefined) {\n          bx = by = 0;\n          for (const i of hull) bx += points[i * 2], by += points[i * 2 + 1];\n          bx /= hull.length, by /= hull.length;\n        }\n        const a = 1e9 * Math.sign((bx - x1) * ey - (by - y1) * ex);\n        x = (x1 + x3) / 2 - a * ey;\n        y = (y1 + y3) / 2 + a * ex;\n      } else {\n        const d = 1 / ab;\n        const bl = dx * dx + dy * dy;\n        const cl = ex * ex + ey * ey;\n        x = x1 + (ey * bl - dy * cl) * d;\n        y = y1 + (dx * cl - ex * bl) * d;\n      }\n      circumcenters[j] = x;\n      circumcenters[j + 1] = y;\n    }\n\n    // Compute exterior cell rays.\n    let h = hull[hull.length - 1];\n    let p0, p1 = h * 4;\n    let x0, x1 = points[2 * h];\n    let y0, y1 = points[2 * h + 1];\n    vectors.fill(0);\n    for (let i = 0; i < hull.length; ++i) {\n      h = hull[i];\n      p0 = p1, x0 = x1, y0 = y1;\n      p1 = h * 4, x1 = points[2 * h], y1 = points[2 * h + 1];\n      vectors[p0 + 2] = vectors[p1] = y0 - y1;\n      vectors[p0 + 3] = vectors[p1 + 1] = x1 - x0;\n    }\n  }\n  render(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const {delaunay: {halfedges, inedges, hull}, circumcenters, vectors} = this;\n    if (hull.length <= 1) return null;\n    for (let i = 0, n = halfedges.length; i < n; ++i) {\n      const j = halfedges[i];\n      if (j < i) continue;\n      const ti = Math.floor(i / 3) * 2;\n      const tj = Math.floor(j / 3) * 2;\n      const xi = circumcenters[ti];\n      const yi = circumcenters[ti + 1];\n      const xj = circumcenters[tj];\n      const yj = circumcenters[tj + 1];\n      this._renderSegment(xi, yi, xj, yj, context);\n    }\n    let h0, h1 = hull[hull.length - 1];\n    for (let i = 0; i < hull.length; ++i) {\n      h0 = h1, h1 = hull[i];\n      const t = Math.floor(inedges[h1] / 3) * 2;\n      const x = circumcenters[t];\n      const y = circumcenters[t + 1];\n      const v = h0 * 4;\n      const p = this._project(x, y, vectors[v + 2], vectors[v + 3]);\n      if (p) this._renderSegment(x, y, p[0], p[1], context);\n    }\n    return buffer && buffer.value();\n  }\n  renderBounds(context) {\n    const buffer = context == null ? context = new Path : undefined;\n    context.rect(this.xmin, this.ymin, this.xmax - this.xmin, this.ymax - this.ymin);\n    return buffer && buffer.value();\n  }\n  renderCell(i, context) {\n    const buffer = context == null ? context = new Path : undefined;\n    const points = this._clip(i);\n    if (points === null || !points.length) return;\n    context.moveTo(points[0], points[1]);\n    let n = points.length;\n    while (points[0] === points[n-2] && points[1] === points[n-1] && n > 1) n -= 2;\n    for (let i = 2; i < n; i += 2) {\n      if (points[i] !== points[i-2] || points[i+1] !== points[i-1])\n        context.lineTo(points[i], points[i + 1]);\n    }\n    context.closePath();\n    return buffer && buffer.value();\n  }\n  *cellPolygons() {\n    const {delaunay: {points}} = this;\n    for (let i = 0, n = points.length / 2; i < n; ++i) {\n      const cell = this.cellPolygon(i);\n      if (cell) cell.index = i, yield cell;\n    }\n  }\n  cellPolygon(i) {\n    const polygon = new Polygon;\n    this.renderCell(i, polygon);\n    return polygon.value();\n  }\n  _renderSegment(x0, y0, x1, y1, context) {\n    let S;\n    const c0 = this._regioncode(x0, y0);\n    const c1 = this._regioncode(x1, y1);\n    if (c0 === 0 && c1 === 0) {\n      context.moveTo(x0, y0);\n      context.lineTo(x1, y1);\n    } else if (S = this._clipSegment(x0, y0, x1, y1, c0, c1)) {\n      context.moveTo(S[0], S[1]);\n      context.lineTo(S[2], S[3]);\n    }\n  }\n  contains(i, x, y) {\n    if ((x = +x, x !== x) || (y = +y, y !== y)) return false;\n    return this.delaunay._step(i, x, y) === i;\n  }\n  *neighbors(i) {\n    const ci = this._clip(i);\n    if (ci) for (const j of this.delaunay.neighbors(i)) {\n      const cj = this._clip(j);\n      // find the common edge\n      if (cj) loop: for (let ai = 0, li = ci.length; ai < li; ai += 2) {\n        for (let aj = 0, lj = cj.length; aj < lj; aj += 2) {\n          if (ci[ai] === cj[aj]\n              && ci[ai + 1] === cj[aj + 1]\n              && ci[(ai + 2) % li] === cj[(aj + lj - 2) % lj]\n              && ci[(ai + 3) % li] === cj[(aj + lj - 1) % lj]) {\n            yield j;\n            break loop;\n          }\n        }\n      }\n    }\n  }\n  _cell(i) {\n    const {circumcenters, delaunay: {inedges, halfedges, triangles}} = this;\n    const e0 = inedges[i];\n    if (e0 === -1) return null; // coincident point\n    const points = [];\n    let e = e0;\n    do {\n      const t = Math.floor(e / 3);\n      points.push(circumcenters[t * 2], circumcenters[t * 2 + 1]);\n      e = e % 3 === 2 ? e - 2 : e + 1;\n      if (triangles[e] !== i) break; // bad triangulation\n      e = halfedges[e];\n    } while (e !== e0 && e !== -1);\n    return points;\n  }\n  _clip(i) {\n    // degenerate case (1 valid point: return the box)\n    if (i === 0 && this.delaunay.hull.length === 1) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    const points = this._cell(i);\n    if (points === null) return null;\n    const {vectors: V} = this;\n    const v = i * 4;\n    return this._simplify(V[v] || V[v + 1]\n        ? this._clipInfinite(i, points, V[v], V[v + 1], V[v + 2], V[v + 3])\n        : this._clipFinite(i, points));\n  }\n  _clipFinite(i, points) {\n    const n = points.length;\n    let P = null;\n    let x0, y0, x1 = points[n - 2], y1 = points[n - 1];\n    let c0, c1 = this._regioncode(x1, y1);\n    let e0, e1 = 0;\n    for (let j = 0; j < n; j += 2) {\n      x0 = x1, y0 = y1, x1 = points[j], y1 = points[j + 1];\n      c0 = c1, c1 = this._regioncode(x1, y1);\n      if (c0 === 0 && c1 === 0) {\n        e0 = e1, e1 = 0;\n        if (P) P.push(x1, y1);\n        else P = [x1, y1];\n      } else {\n        let S, sx0, sy0, sx1, sy1;\n        if (c0 === 0) {\n          if ((S = this._clipSegment(x0, y0, x1, y1, c0, c1)) === null) continue;\n          [sx0, sy0, sx1, sy1] = S;\n        } else {\n          if ((S = this._clipSegment(x1, y1, x0, y0, c1, c0)) === null) continue;\n          [sx1, sy1, sx0, sy0] = S;\n          e0 = e1, e1 = this._edgecode(sx0, sy0);\n          if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n          if (P) P.push(sx0, sy0);\n          else P = [sx0, sy0];\n        }\n        e0 = e1, e1 = this._edgecode(sx1, sy1);\n        if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n        if (P) P.push(sx1, sy1);\n        else P = [sx1, sy1];\n      }\n    }\n    if (P) {\n      e0 = e1, e1 = this._edgecode(P[0], P[1]);\n      if (e0 && e1) this._edge(i, e0, e1, P, P.length);\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      return [this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax, this.xmin, this.ymin];\n    }\n    return P;\n  }\n  _clipSegment(x0, y0, x1, y1, c0, c1) {\n    // for more robustness, always consider the segment in the same order\n    const flip = c0 < c1;\n    if (flip) [x0, y0, x1, y1, c0, c1] = [x1, y1, x0, y0, c1, c0];\n    while (true) {\n      if (c0 === 0 && c1 === 0) return flip ? [x1, y1, x0, y0] : [x0, y0, x1, y1];\n      if (c0 & c1) return null;\n      let x, y, c = c0 || c1;\n      if (c & 0b1000) x = x0 + (x1 - x0) * (this.ymax - y0) / (y1 - y0), y = this.ymax;\n      else if (c & 0b0100) x = x0 + (x1 - x0) * (this.ymin - y0) / (y1 - y0), y = this.ymin;\n      else if (c & 0b0010) y = y0 + (y1 - y0) * (this.xmax - x0) / (x1 - x0), x = this.xmax;\n      else y = y0 + (y1 - y0) * (this.xmin - x0) / (x1 - x0), x = this.xmin;\n      if (c0) x0 = x, y0 = y, c0 = this._regioncode(x0, y0);\n      else x1 = x, y1 = y, c1 = this._regioncode(x1, y1);\n    }\n  }\n  _clipInfinite(i, points, vx0, vy0, vxn, vyn) {\n    let P = Array.from(points), p;\n    if (p = this._project(P[0], P[1], vx0, vy0)) P.unshift(p[0], p[1]);\n    if (p = this._project(P[P.length - 2], P[P.length - 1], vxn, vyn)) P.push(p[0], p[1]);\n    if (P = this._clipFinite(i, P)) {\n      for (let j = 0, n = P.length, c0, c1 = this._edgecode(P[n - 2], P[n - 1]); j < n; j += 2) {\n        c0 = c1, c1 = this._edgecode(P[j], P[j + 1]);\n        if (c0 && c1) j = this._edge(i, c0, c1, P, j), n = P.length;\n      }\n    } else if (this.contains(i, (this.xmin + this.xmax) / 2, (this.ymin + this.ymax) / 2)) {\n      P = [this.xmin, this.ymin, this.xmax, this.ymin, this.xmax, this.ymax, this.xmin, this.ymax];\n    }\n    return P;\n  }\n  _edge(i, e0, e1, P, j) {\n    while (e0 !== e1) {\n      let x, y;\n      switch (e0) {\n        case 0b0101: e0 = 0b0100; continue; // top-left\n        case 0b0100: e0 = 0b0110, x = this.xmax, y = this.ymin; break; // top\n        case 0b0110: e0 = 0b0010; continue; // top-right\n        case 0b0010: e0 = 0b1010, x = this.xmax, y = this.ymax; break; // right\n        case 0b1010: e0 = 0b1000; continue; // bottom-right\n        case 0b1000: e0 = 0b1001, x = this.xmin, y = this.ymax; break; // bottom\n        case 0b1001: e0 = 0b0001; continue; // bottom-left\n        case 0b0001: e0 = 0b0101, x = this.xmin, y = this.ymin; break; // left\n      }\n      // Note: this implicitly checks for out of bounds: if P[j] or P[j+1] are\n      // undefined, the conditional statement will be executed.\n      if ((P[j] !== x || P[j + 1] !== y) && this.contains(i, x, y)) {\n        P.splice(j, 0, x, y), j += 2;\n      }\n    }\n    return j;\n  }\n  _project(x0, y0, vx, vy) {\n    let t = Infinity, c, x, y;\n    if (vy < 0) { // top\n      if (y0 <= this.ymin) return null;\n      if ((c = (this.ymin - y0) / vy) < t) y = this.ymin, x = x0 + (t = c) * vx;\n    } else if (vy > 0) { // bottom\n      if (y0 >= this.ymax) return null;\n      if ((c = (this.ymax - y0) / vy) < t) y = this.ymax, x = x0 + (t = c) * vx;\n    }\n    if (vx > 0) { // right\n      if (x0 >= this.xmax) return null;\n      if ((c = (this.xmax - x0) / vx) < t) x = this.xmax, y = y0 + (t = c) * vy;\n    } else if (vx < 0) { // left\n      if (x0 <= this.xmin) return null;\n      if ((c = (this.xmin - x0) / vx) < t) x = this.xmin, y = y0 + (t = c) * vy;\n    }\n    return [x, y];\n  }\n  _edgecode(x, y) {\n    return (x === this.xmin ? 0b0001\n        : x === this.xmax ? 0b0010 : 0b0000)\n        | (y === this.ymin ? 0b0100\n        : y === this.ymax ? 0b1000 : 0b0000);\n  }\n  _regioncode(x, y) {\n    return (x < this.xmin ? 0b0001\n        : x > this.xmax ? 0b0010 : 0b0000)\n        | (y < this.ymin ? 0b0100\n        : y > this.ymax ? 0b1000 : 0b0000);\n  }\n  _simplify(P) {\n    if (P && P.length > 4) {\n      for (let i = 0; i < P.length; i+= 2) {\n        const j = (i + 2) % P.length, k = (i + 4) % P.length;\n        if (P[i] === P[j] && P[j] === P[k] || P[i + 1] === P[j + 1] && P[j + 1] === P[k + 1]) {\n          P.splice(j, 2), i -= 2;\n        }\n      }\n      if (!P.length) P = null;\n    }\n    return P;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}