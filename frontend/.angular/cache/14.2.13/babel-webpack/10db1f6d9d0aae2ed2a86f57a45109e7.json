{"ast":null,"code":"import constant from \"./constant.js\";\nimport { abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau } from \"./math.js\";\nimport { withPath } from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0,\n      y10 = y1 - y0,\n      x32 = x3 - x2,\n      y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n} // Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\n\n\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00; // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function () {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n    if (!context) context = buffer = path(); // Ensure that the outer radius is always larger than the inner radius.\n\n    if (r1 < r0) r = r1, r1 = r0, r0 = r; // Is it a point?\n\n    if (!(r1 > epsilon)) context.moveTo(0, 0); // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    } // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = ap > epsilon && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1; // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= cw ? 1 : -1, a00 += p0, a10 -= p0;else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= cw ? 1 : -1, a01 += p1, a11 -= p1;else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10); // Apply rounded corners?\n\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc; // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      } // Is the sector collapsed to a line?\n\n\n      if (!(da1 > epsilon)) context.moveTo(x01, y01); // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      } // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw); // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10); // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01); // Have the corners merged?\n\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw); // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      } // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n    context.closePath();\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function () {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function (_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function (_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function (_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function (_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function (_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function (_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function (_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function (_) {\n    return arguments.length ? (context = _ == null ? null : _, arc) : context;\n  };\n\n  return arc;\n}","map":{"version":3,"names":["constant","abs","acos","asin","atan2","cos","epsilon","halfPi","max","min","pi","sin","sqrt","tau","withPath","arcInnerRadius","d","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x0","y0","x1","y1","x2","y2","x3","y3","x10","y10","x32","y32","t","cornerTangents","r1","rc","cw","x01","y01","lo","ox","oy","x11","y11","x00","y00","dx","dy","d2","r","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cx","cy","cornerRadius","padRadius","context","path","arc","buffer","r0","apply","arguments","a0","a1","da","moveTo","a01","a11","a00","a10","da0","da1","ap","rp","rc0","rc1","t0","t1","p0","p1","oc","ax","ay","bx","by","kc","lc","lineTo","closePath","centroid","a","_","length"],"sources":["/home/boriskiva/PycharmProjects/Strategy_game/strategy_game/frontend/node_modules/d3-shape/src/arc.js"],"sourcesContent":["import constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\nimport {withPath} from \"./path.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null,\n      path = withPath(arc);\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle. If this\n        // intersection fails, it’s probably because the arc is too small, so\n        // disable the corner radius entirely.\n        if (da < pi) {\n          if (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10)) {\n            var ax = x01 - oc[0],\n                ay = y01 - oc[1],\n                bx = x11 - oc[0],\n                by = y11 - oc[1],\n                kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n                lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n            rc0 = min(rc, (r0 - lc) / (kc - 1));\n            rc1 = min(rc, (r1 - lc) / (kc + 1));\n          } else {\n            rc0 = rc1 = 0;\n          }\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}