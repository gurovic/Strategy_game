{"ast":null,"code":"const pi = Math.PI,\n      tau = 2 * pi,\n      epsilon = 1e-6,\n      tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function (strings) {\n    this._ += strings[0];\n\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01; // Is this path empty? Move to (x1,y1).\n\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    } // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.\n\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw; // Is the radius negative? Error.\n\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0; // Is this path empty? Move to (x0,y0).\n\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    } // Is this arc empty? We’re done.\n\n\n    if (!r) return; // Does the angle go the wrong way? Flip the direction.\n\n    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.\n\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    } // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n\n  toString() {\n    return this._;\n  }\n\n}\nexport function path() {\n  return new Path();\n} // Allow instanceof d3.path\n\npath.prototype = Path.prototype;\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}","map":{"version":3,"names":["pi","Math","PI","tau","epsilon","tauEpsilon","append","strings","_","i","n","length","arguments","appendRound","digits","d","floor","Error","k","round","Path","constructor","_x0","_y0","_x1","_y1","_append","moveTo","x","y","closePath","lineTo","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","r","x0","y0","x21","y21","x01","y01","l01_2","abs","x20","y20","l21_2","l20_2","l21","sqrt","l01","l","tan","acos","t01","t21","arc","a0","a1","ccw","dx","cos","dy","sin","cw","da","rect","w","h","toString","path","prototype","pathRound"],"sources":["/home/boriskiva/PycharmProjects/Strategy_game/strategy_game/frontend/node_modules/d3-path/src/path.js"],"sourcesContent":["const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction append(strings) {\n  this._ += strings[0];\n  for (let i = 1, n = strings.length; i < n; ++i) {\n    this._ += arguments[i] + strings[i];\n  }\n}\n\nfunction appendRound(digits) {\n  let d = Math.floor(digits);\n  if (!(d >= 0)) throw new Error(`invalid digits: ${digits}`);\n  if (d > 15) return append;\n  const k = 10 ** d;\n  return function(strings) {\n    this._ += strings[0];\n    for (let i = 1, n = strings.length; i < n; ++i) {\n      this._ += Math.round(arguments[i] * k) / k + strings[i];\n    }\n  };\n}\n\nexport class Path {\n  constructor(digits) {\n    this._x0 = this._y0 = // start of current subpath\n    this._x1 = this._y1 = null; // end of current subpath\n    this._ = \"\";\n    this._append = digits == null ? append : appendRound(digits);\n  }\n  moveTo(x, y) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}`;\n  }\n  closePath() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._append`Z`;\n    }\n  }\n  lineTo(x, y) {\n    this._append`L${this._x1 = +x},${this._y1 = +y}`;\n  }\n  quadraticCurveTo(x1, y1, x, y) {\n    this._append`Q${+x1},${+y1},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  bezierCurveTo(x1, y1, x2, y2, x, y) {\n    this._append`C${+x1},${+y1},${+x2},${+y2},${this._x1 = +x},${this._y1 = +y}`;\n  }\n  arcTo(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._append`M${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._append`L${this._x1 = x1},${this._y1 = y1}`;\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      let x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._append`L${x1 + t01 * x01},${y1 + t01 * y01}`;\n      }\n\n      this._append`A${r},${r},0,0,${+(y01 * x20 > x01 * y20)},${this._x1 = x1 + t21 * x21},${this._y1 = y1 + t21 * y21}`;\n    }\n  }\n  arc(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(`negative radius: ${r}`);\n\n    let dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._append`M${x0},${y0}`;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._append`L${x0},${y0}`;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._append`A${r},${r},0,1,${cw},${x - dx},${y - dy}A${r},${r},0,1,${cw},${this._x1 = x0},${this._y1 = y0}`;\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._append`A${r},${r},0,${+(da >= pi)},${cw},${this._x1 = x + r * Math.cos(a1)},${this._y1 = y + r * Math.sin(a1)}`;\n    }\n  }\n  rect(x, y, w, h) {\n    this._append`M${this._x0 = this._x1 = +x},${this._y0 = this._y1 = +y}h${w = +w}v${+h}h${-w}Z`;\n  }\n  toString() {\n    return this._;\n  }\n}\n\nexport function path() {\n  return new Path;\n}\n\n// Allow instanceof d3.path\npath.prototype = Path.prototype;\n\nexport function pathRound(digits = 3) {\n  return new Path(+digits);\n}\n"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,IAAI,CAACC,EAAhB;AAAA,MACIC,GAAG,GAAG,IAAIH,EADd;AAAA,MAEII,OAAO,GAAG,IAFd;AAAA,MAGIC,UAAU,GAAGF,GAAG,GAAGC,OAHvB;;AAKA,SAASE,MAAT,CAAgBC,OAAhB,EAAyB;EACvB,KAAKC,CAAL,IAAUD,OAAO,CAAC,CAAD,CAAjB;;EACA,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2C,EAAED,CAA7C,EAAgD;IAC9C,KAAKD,CAAL,IAAUI,SAAS,CAACH,CAAD,CAAT,GAAeF,OAAO,CAACE,CAAD,CAAhC;EACD;AACF;;AAED,SAASI,WAAT,CAAqBC,MAArB,EAA6B;EAC3B,IAAIC,CAAC,GAAGd,IAAI,CAACe,KAAL,CAAWF,MAAX,CAAR;EACA,IAAI,EAAEC,CAAC,IAAI,CAAP,CAAJ,EAAe,MAAM,IAAIE,KAAJ,CAAW,mBAAkBH,MAAO,EAApC,CAAN;EACf,IAAIC,CAAC,GAAG,EAAR,EAAY,OAAOT,MAAP;EACZ,MAAMY,CAAC,GAAG,MAAMH,CAAhB;EACA,OAAO,UAASR,OAAT,EAAkB;IACvB,KAAKC,CAAL,IAAUD,OAAO,CAAC,CAAD,CAAjB;;IACA,KAAK,IAAIE,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2C,EAAED,CAA7C,EAAgD;MAC9C,KAAKD,CAAL,IAAUP,IAAI,CAACkB,KAAL,CAAWP,SAAS,CAACH,CAAD,CAAT,GAAeS,CAA1B,IAA+BA,CAA/B,GAAmCX,OAAO,CAACE,CAAD,CAApD;IACD;EACF,CALD;AAMD;;AAED,OAAO,MAAMW,IAAN,CAAW;EAChBC,WAAW,CAACP,MAAD,EAAS;IAClB,KAAKQ,GAAL,GAAW,KAAKC,GAAL,GAAW;IACtB,KAAKC,GAAL,GAAW,KAAKC,GAAL,GAAW,IADtB,CADkB,CAEU;;IAC5B,KAAKjB,CAAL,GAAS,EAAT;IACA,KAAKkB,OAAL,GAAeZ,MAAM,IAAI,IAAV,GAAiBR,MAAjB,GAA0BO,WAAW,CAACC,MAAD,CAApD;EACD;;EACDa,MAAM,CAACC,CAAD,EAAIC,CAAJ,EAAO;IACX,KAAKH,OAAQ,IAAG,KAAKJ,GAAL,GAAW,KAAKE,GAAL,GAAW,CAACI,CAAE,IAAG,KAAKL,GAAL,GAAW,KAAKE,GAAL,GAAW,CAACI,CAAE,EAArE;EACD;;EACDC,SAAS,GAAG;IACV,IAAI,KAAKN,GAAL,KAAa,IAAjB,EAAuB;MACrB,KAAKA,GAAL,GAAW,KAAKF,GAAhB,EAAqB,KAAKG,GAAL,GAAW,KAAKF,GAArC;MACA,KAAKG,OAAQ,GAAb;IACD;EACF;;EACDK,MAAM,CAACH,CAAD,EAAIC,CAAJ,EAAO;IACX,KAAKH,OAAQ,IAAG,KAAKF,GAAL,GAAW,CAACI,CAAE,IAAG,KAAKH,GAAL,GAAW,CAACI,CAAE,EAA/C;EACD;;EACDG,gBAAgB,CAACC,EAAD,EAAKC,EAAL,EAASN,CAAT,EAAYC,CAAZ,EAAe;IAC7B,KAAKH,OAAQ,IAAG,CAACO,EAAG,IAAG,CAACC,EAAG,IAAG,KAAKV,GAAL,GAAW,CAACI,CAAE,IAAG,KAAKH,GAAL,GAAW,CAACI,CAAE,EAA7D;EACD;;EACDM,aAAa,CAACF,EAAD,EAAKC,EAAL,EAASE,EAAT,EAAaC,EAAb,EAAiBT,CAAjB,EAAoBC,CAApB,EAAuB;IAClC,KAAKH,OAAQ,IAAG,CAACO,EAAG,IAAG,CAACC,EAAG,IAAG,CAACE,EAAG,IAAG,CAACC,EAAG,IAAG,KAAKb,GAAL,GAAW,CAACI,CAAE,IAAG,KAAKH,GAAL,GAAW,CAACI,CAAE,EAA3E;EACD;;EACDS,KAAK,CAACL,EAAD,EAAKC,EAAL,EAASE,EAAT,EAAaC,EAAb,EAAiBE,CAAjB,EAAoB;IACvBN,EAAE,GAAG,CAACA,EAAN,EAAUC,EAAE,GAAG,CAACA,EAAhB,EAAoBE,EAAE,GAAG,CAACA,EAA1B,EAA8BC,EAAE,GAAG,CAACA,EAApC,EAAwCE,CAAC,GAAG,CAACA,CAA7C,CADuB,CAGvB;;IACA,IAAIA,CAAC,GAAG,CAAR,EAAW,MAAM,IAAItB,KAAJ,CAAW,oBAAmBsB,CAAE,EAAhC,CAAN;IAEX,IAAIC,EAAE,GAAG,KAAKhB,GAAd;IAAA,IACIiB,EAAE,GAAG,KAAKhB,GADd;IAAA,IAEIiB,GAAG,GAAGN,EAAE,GAAGH,EAFf;IAAA,IAGIU,GAAG,GAAGN,EAAE,GAAGH,EAHf;IAAA,IAIIU,GAAG,GAAGJ,EAAE,GAAGP,EAJf;IAAA,IAKIY,GAAG,GAAGJ,EAAE,GAAGP,EALf;IAAA,IAMIY,KAAK,GAAGF,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAN9B,CANuB,CAcvB;;IACA,IAAI,KAAKrB,GAAL,KAAa,IAAjB,EAAuB;MACrB,KAAKE,OAAQ,IAAG,KAAKF,GAAL,GAAWS,EAAG,IAAG,KAAKR,GAAL,GAAWS,EAAG,EAA/C;IACD,CAFD,CAIA;IAJA,KAKK,IAAI,EAAEY,KAAK,GAAG1C,OAAV,CAAJ,EAAuB,CAAvB,CAEL;IACA;IACA;IAJK,KAKA,IAAI,EAAEH,IAAI,CAAC8C,GAAL,CAASF,GAAG,GAAGH,GAAN,GAAYC,GAAG,GAAGC,GAA3B,IAAkCxC,OAApC,KAAgD,CAACmC,CAArD,EAAwD;MAC3D,KAAKb,OAAQ,IAAG,KAAKF,GAAL,GAAWS,EAAG,IAAG,KAAKR,GAAL,GAAWS,EAAG,EAA/C;IACD,CAFI,CAIL;IAJK,KAKA;MACH,IAAIc,GAAG,GAAGZ,EAAE,GAAGI,EAAf;MAAA,IACIS,GAAG,GAAGZ,EAAE,GAAGI,EADf;MAAA,IAEIS,KAAK,GAAGR,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAF9B;MAAA,IAGIQ,KAAK,GAAGH,GAAG,GAAGA,GAAN,GAAYC,GAAG,GAAGA,GAH9B;MAAA,IAIIG,GAAG,GAAGnD,IAAI,CAACoD,IAAL,CAAUH,KAAV,CAJV;MAAA,IAKII,GAAG,GAAGrD,IAAI,CAACoD,IAAL,CAAUP,KAAV,CALV;MAAA,IAMIS,CAAC,GAAGhB,CAAC,GAAGtC,IAAI,CAACuD,GAAL,CAAS,CAACxD,EAAE,GAAGC,IAAI,CAACwD,IAAL,CAAU,CAACP,KAAK,GAAGJ,KAAR,GAAgBK,KAAjB,KAA2B,IAAIC,GAAJ,GAAUE,GAArC,CAAV,CAAN,IAA8D,CAAvE,CANZ;MAAA,IAOII,GAAG,GAAGH,CAAC,GAAGD,GAPd;MAAA,IAQIK,GAAG,GAAGJ,CAAC,GAAGH,GARd,CADG,CAWH;;MACA,IAAInD,IAAI,CAAC8C,GAAL,CAASW,GAAG,GAAG,CAAf,IAAoBtD,OAAxB,EAAiC;QAC/B,KAAKsB,OAAQ,IAAGO,EAAE,GAAGyB,GAAG,GAAGd,GAAI,IAAGV,EAAE,GAAGwB,GAAG,GAAGb,GAAI,EAAjD;MACD;;MAED,KAAKnB,OAAQ,IAAGa,CAAE,IAAGA,CAAE,QAAO,EAAEM,GAAG,GAAGG,GAAN,GAAYJ,GAAG,GAAGK,GAApB,CAAyB,IAAG,KAAKzB,GAAL,GAAWS,EAAE,GAAG0B,GAAG,GAAGjB,GAAI,IAAG,KAAKjB,GAAL,GAAWS,EAAE,GAAGyB,GAAG,GAAGhB,GAAI,EAAjH;IACD;EACF;;EACDiB,GAAG,CAAChC,CAAD,EAAIC,CAAJ,EAAOU,CAAP,EAAUsB,EAAV,EAAcC,EAAd,EAAkBC,GAAlB,EAAuB;IACxBnC,CAAC,GAAG,CAACA,CAAL,EAAQC,CAAC,GAAG,CAACA,CAAb,EAAgBU,CAAC,GAAG,CAACA,CAArB,EAAwBwB,GAAG,GAAG,CAAC,CAACA,GAAhC,CADwB,CAGxB;;IACA,IAAIxB,CAAC,GAAG,CAAR,EAAW,MAAM,IAAItB,KAAJ,CAAW,oBAAmBsB,CAAE,EAAhC,CAAN;IAEX,IAAIyB,EAAE,GAAGzB,CAAC,GAAGtC,IAAI,CAACgE,GAAL,CAASJ,EAAT,CAAb;IAAA,IACIK,EAAE,GAAG3B,CAAC,GAAGtC,IAAI,CAACkE,GAAL,CAASN,EAAT,CADb;IAAA,IAEIrB,EAAE,GAAGZ,CAAC,GAAGoC,EAFb;IAAA,IAGIvB,EAAE,GAAGZ,CAAC,GAAGqC,EAHb;IAAA,IAIIE,EAAE,GAAG,IAAIL,GAJb;IAAA,IAKIM,EAAE,GAAGN,GAAG,GAAGF,EAAE,GAAGC,EAAR,GAAaA,EAAE,GAAGD,EAL9B,CANwB,CAaxB;;IACA,IAAI,KAAKrC,GAAL,KAAa,IAAjB,EAAuB;MACrB,KAAKE,OAAQ,IAAGc,EAAG,IAAGC,EAAG,EAAzB;IACD,CAFD,CAIA;IAJA,KAKK,IAAIxC,IAAI,CAAC8C,GAAL,CAAS,KAAKvB,GAAL,GAAWgB,EAApB,IAA0BpC,OAA1B,IAAqCH,IAAI,CAAC8C,GAAL,CAAS,KAAKtB,GAAL,GAAWgB,EAApB,IAA0BrC,OAAnE,EAA4E;MAC/E,KAAKsB,OAAQ,IAAGc,EAAG,IAAGC,EAAG,EAAzB;IACD,CArBuB,CAuBxB;;;IACA,IAAI,CAACF,CAAL,EAAQ,OAxBgB,CA0BxB;;IACA,IAAI8B,EAAE,GAAG,CAAT,EAAYA,EAAE,GAAGA,EAAE,GAAGlE,GAAL,GAAWA,GAAhB,CA3BY,CA6BxB;;IACA,IAAIkE,EAAE,GAAGhE,UAAT,EAAqB;MACnB,KAAKqB,OAAQ,IAAGa,CAAE,IAAGA,CAAE,QAAO6B,EAAG,IAAGxC,CAAC,GAAGoC,EAAG,IAAGnC,CAAC,GAAGqC,EAAG,IAAG3B,CAAE,IAAGA,CAAE,QAAO6B,EAAG,IAAG,KAAK5C,GAAL,GAAWgB,EAAG,IAAG,KAAKf,GAAL,GAAWgB,EAAG,EAA3G;IACD,CAFD,CAIA;IAJA,KAKK,IAAI4B,EAAE,GAAGjE,OAAT,EAAkB;MACrB,KAAKsB,OAAQ,IAAGa,CAAE,IAAGA,CAAE,MAAK,EAAE8B,EAAE,IAAIrE,EAAR,CAAY,IAAGoE,EAAG,IAAG,KAAK5C,GAAL,GAAWI,CAAC,GAAGW,CAAC,GAAGtC,IAAI,CAACgE,GAAL,CAASH,EAAT,CAAa,IAAG,KAAKrC,GAAL,GAAWI,CAAC,GAAGU,CAAC,GAAGtC,IAAI,CAACkE,GAAL,CAASL,EAAT,CAAa,EAApH;IACD;EACF;;EACDQ,IAAI,CAAC1C,CAAD,EAAIC,CAAJ,EAAO0C,CAAP,EAAUC,CAAV,EAAa;IACf,KAAK9C,OAAQ,IAAG,KAAKJ,GAAL,GAAW,KAAKE,GAAL,GAAW,CAACI,CAAE,IAAG,KAAKL,GAAL,GAAW,KAAKE,GAAL,GAAW,CAACI,CAAE,IAAG0C,CAAC,GAAG,CAACA,CAAE,IAAG,CAACC,CAAE,IAAG,CAACD,CAAE,GAA3F;EACD;;EACDE,QAAQ,GAAG;IACT,OAAO,KAAKjE,CAAZ;EACD;;AAtHe;AAyHlB,OAAO,SAASkE,IAAT,GAAgB;EACrB,OAAO,IAAItD,IAAJ,EAAP;AACD,C,CAED;;AACAsD,IAAI,CAACC,SAAL,GAAiBvD,IAAI,CAACuD,SAAtB;AAEA,OAAO,SAASC,SAAT,CAAmB9D,MAAM,GAAG,CAA5B,EAA+B;EACpC,OAAO,IAAIM,IAAJ,CAAS,CAACN,MAAV,CAAP;AACD"},"metadata":{},"sourceType":"module"}